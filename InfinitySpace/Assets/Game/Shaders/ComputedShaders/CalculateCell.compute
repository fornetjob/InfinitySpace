#pragma kernel Calculate

RWStructuredBuffer<int> CellBuffer;

int PosX;
int PosY;

uint Seed;
int Width;

[numthreads(3, 1, 1)]
void Calculate(uint id: SV_DispatchThreadID)
{
    const uint WorldSize = 1000000;
    const uint PrimeX = 1619;
    const uint PrimeY = 31337;
    const uint HashMod = 32768;
    const uint MaxRating = 10001;
    const uint CellSize = 100;
    const int CellLenght = 100 * 100;

    uint cellPos = (id / CellLenght);

    uint cellX = (cellPos % 10) * CellSize;
    uint cellY = (cellPos / 10) * CellSize;

    uint sId = id % CellLenght;

    uint x = WorldSize + PosX + cellX + sId % CellSize;
    uint y = WorldSize + PosY + cellY + (sId / CellSize) % CellSize;

    uint hash = Seed;

    hash += x * PrimeX;
    hash += y * PrimeY;
    hash = (hash * hash * 60493) % HashMod + 1;

    hash *= step(hash, MaxRating);

    CellBuffer[id] = hash;

}